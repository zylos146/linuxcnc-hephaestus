# TODO net z-index-enable  =>  pid.z.index-enable
# TODO net z-enable        =>  pid.z.enable
# TODO net z-pos-cmd       =>  pid.z.command
# TODO net z-pos-fb        =>  pid.z.feedback
# TODO net z-output        <=  pid.z.output

# ---closedloop stepper signals---

net z-pos-cmd    <= joint.2.motor-pos-cmd
net z-vel-cmd    <= joint.2.vel-cmd
# TODO net z-output     => hm2_5i25.0.stepgen.01.velocity-cmd
# TODO net z-pos-fb     <= hm2_5i25.0.stepgen.01.position-fb
net z-pos-fb     => joint.2.motor-pos-fb
net z-enable     <= joint.2.amp-enable-out
# TODO net z-enable     => hm2_5i25.0.stepgen.01.enable

# ---setup home / limit switch signals---

# net z-home-sw     =>  joint.2.home-sw-in
# net z-neg-limit     =>  joint.2.neg-lim-sw-in
# net z-pos-limit     =>  joint.2.pos-lim-sw-in

# TODO net max-y <= hm2_5i25.0.7i76.0.0.input-02-not
net max-z => joint.2.home-sw-in
#net max-z => joint.2.pos-lim-sw-in

# Setup the PID Parameters
setp   pid.z.Pgain     [JOINT_2]P
setp   pid.z.Igain     [JOINT_2]I
setp   pid.z.Dgain     [JOINT_2]D
setp   pid.z.bias      [JOINT_2]BIAS
setp   pid.z.FF0       [JOINT_2]FF0
setp   pid.z.FF1       [JOINT_2]FF1
setp   pid.z.FF2       [JOINT_2]FF2
setp   pid.z.deadband  [JOINT_2]DEADBAND
setp   pid.z.maxoutput [JOINT_2]MAX_OUTPUT
setp   pid.z.error-previous-target true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
setp   pid.z.maxerror 0.012700

# Machine > Joint (Home/Limit)
net max-z => joint.2.home-sw-in
# TODO - net max-y <= lcec.0.in1x4.0 # hm2_5i25.0.7i76.0.0.input-03-not
# net z-neg-limit     =>  joint.2.neg-lim-sw-in
# net z-pos-limit     =>  joint.2.pos-lim-sw-in

## Hook up Joint > PID
net z-pos-cmd    <= joint.2.motor-pos-cmd
net z-vel-cmd    <= joint.2.vel-cmd
net z-pos-fb     => joint.2.motor-pos-fb
net z-enable     <= joint.2.amp-enable-out

# PID > Net
net z-index-enable  =>  pid.z.index-enable
net z-enable        =>  pid.z.enable
net z-pos-cmd       =>  pid.z.command
net z-pos-fb        =>  pid.z.feedback
net z-output        <=  pid.z.output

# set motor position scale (default 1 motor revolution)
setp lcec.0.z-axis.srv-scale [AXIS_Z]SCALE
setp lcec.0.z-axis.enc-pos-scale [AXIS_Z]ENC_SCALE

# output velocity command from position control
# the scale of this value respects the setting
# of srv-pos-scale. if scale is set to 1.0 this
# means 1 motor revolution per second.

net z-enable    => lcec.0.z-axis.srv-enable
net z-amp-fault <= lcec.0.z-axis.srv-error # TODO - Fault autoreset with this?
net z-output    => lcec.0.z-axis.srv-cmd
net z-pos-fb    <= lcec.0.z-axis.enc-pos
